<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.experttag</groupId>
  <artifactId>DeployAppFileManagerSolara</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>DeployAppFileManagerSolara Maven Webapp</name>
  <url>http://maven.apache.org</url>
  <modules>
  </modules>
  <dependencyManagement>
        <dependencies></dependencies>
  </dependencyManagement>
  <properties>
	  <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	  <tomcat.manager>http://${tomcat.host}:${tomcat.port}/manager</tomcat.manager>
  </properties>
 <distributionManagement>
       <repository>
         <id>ubuntu.gateway.2wire.net</id>
         <name>ubuntu.gateway.2wire.net-releases</name>
	 <url>http://experttag.servebbs.com:8081/artifactory/libs-releases-local</url>
       </repository>
       <snapshotRepository>
         <id>ubuntu.gateway.2wire.net</id>
         <name>ubuntu.gateway.2wire.net-snapshots</name>
	 <url>http://experttag.servebbs.com:8081/artifactory/libs-snapshots-local</url>
        </snapshotRepository>
   </distributionManagement> 
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
    	<groupId>com.experttag.util</groupId>
    	<artifactId>UtilFileManager</artifactId>
    	<version>1.1-SNAPSHOT</version>
    </dependency>
  </dependencies>
  <build>
        <extensions>
            <!--Enabling the use of FTP -->
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh-external</artifactId>
                <version>1.0-beta-6</version>
            </extension>
        </extensions>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.0.2</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.0-beta-9</version>
	     </plugin>
             <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <executions>
                    <execution>
                        <id>verify-deploy</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>deployer-redeploy</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <container>
                        <containerId>tomcat6x</containerId>
                        <type>remote</type>
                    </container>
                    <configuration>
                        <type>runtime</type>
                        <properties>
                            <cargo.tomcat.manager.url>${tomcat.manager}</cargo.tomcat.manager.url>
                            <cargo.remote.username>${tomcat.manager.username}</cargo.remote.username>
                            <cargo.remote.password>${tomcat.manager.password}</cargo.remote.password>
                        </properties>
                    </configuration>
                    <deployer>
                        <type>remote</type>
                        <deployables>
                            <deployable>
                                <groupId>com.experttag</groupId>
                                <artifactId>DeployAppFileManagerSolara</artifactId>
                                <type>war</type>
                                <pingURL>http://${tomcat.host}:${tomcat.port}/${project.build.finalName}/welcome.do</pingURL>
                            </deployable>
                        </deployables>
                    </deployer>
                </configuration>
               </plugin>	
        </plugins>
   </build>
   <scm>
	<connection>scm:git:git@github.com:experttag/UtilFileManager.git</connection>
	<url>scm:git:git@github.com:experttag/UtilFileManager.git</url>
	<developerConnection>scm:git:git@github.com:experttag/UtilFileManager.git</developerConnection>	
   </scm>
</project>
